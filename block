#!/usr/bin/env bash

version="0.1.0"

# Outputs usage information

usage () {
  [ "$1" = "1" ] && echo ""
  echo "  Usage: block [-o <file>] <file>"

  if [ "$1" = "1" ]; then
  cat <<EOF

  Options:
    -o, --output      output to file instead of stdout
    -v, --version     ouput version information
    -h, --help        output this usage information

EOF
  fi
}

# Remove quotes from argument

unquote () {
  echo $1 | tr -d '"' | tr -d "'"
}

# Remove whitespace from argument

trim () {
  echo $1 | tr -d ' '
}

# Get absolute path to file

absolute_path() {
  local parent=$(dirname "$1")
  cd "$parent"
  local abs="$(pwd)/$(basename $1)"
  cd - >/dev/null
  echo "$abs"
}

# Replace block with the corresponding file

replace_block () {
  src=$1
  out=""
  OIFS=$IFS
  IFS=

  while read -r line
  do
    if [[ $line =~ ^[[:space:]]*block ]]; then
      file="$(dirname $src)/${line/block/}"
      file=$(unquote $(trim $file))
      out+="$(replace_block $file)"
    else
      out+="$line\n"
    fi
  done < $src

  echo -e $out
  IFS=$OIFS
}

# Parse arguments

while test $# -ne 0; do
  arg=$1; shift
  case $arg in
    -o|--output)
      output=$1
      shift
      ;;
    -v|--version)
      echo $version
      exit
      ;;
    -h|--help)
      usage 1
      exit
      ;;
    *)
      input=$(absolute_path "$(pwd)/$arg")
      ;;
  esac
done

# Output

if [[ -n $input ]]; then
  if [[ -n $output ]]; then
    # Output block to file
    replace_block $input > $output
  else
    # Output block to stdout
    replace_block $input
  fi
else
  # Display short-usage if no paramters have been passed
  usage
fi

